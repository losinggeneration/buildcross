# Arm Linux options
# Dir to build with
SYSTEM=arm-linux
# Gcc version to build
GCCVER="4.5.1"
# Binutils version to build
BINVER="2.20.1"
# Kernel headers to use
#KERNELVER="linux-libc-headers-2.6.12.0"
# The above is about 2.5 MB, but below will give you newer headers
# Only use the above if you are on dial-up or don't have current linux sources
KERNELVER="2.6.35.7"
KERNELNAME="linux"
# Where the patches are (required)
PATCHDIR="$PATCHBASEDIR/uclibclinux"
# Which languages to compile Gcc with
LANGUAGES="c,c++"

# Required to leave this if
if [ ! "$TESTING" ];then
	# Where to install to (required)
	# if desired, you can change to something like:
	# INSTALL="/mnt/exports/linuxroot/usr
	# Then change SYSROOT to $INSTALL/.. to give a more standard install
	INSTALL="/usr/local/arm-linux"
fi

# This is the target which it's known by by Linux (required, powerpc or sh for example)
GENERICTARG=arm
# Sysroot
SYSROOT=$INSTALL/sys-root
# Sysroot Headers
HEADERSDIR=$SYSROOT/usr/include

if [ "$USEUCLIBC" ]; then
	# Target (required)
	TARG="arm-linux-uclibcgnueabi"
	# uClibc version to build
	# Release edition
	UCLIBCVER="0.9.31"
	# Daily snapshot
	#UCLIBCVER="uClibc-snapshot"
	# SVN
	#UCLIBCVER="uClibc"
	# Where uClibc is
	if [ "$UCLIBCVER" = "snapshot" -o "$UCLIBCVER" = "uClibc" ]; then
		UCLIBCDIR="$SYSTEM/uClibc"
	else
		UCLIBCDIR="$SYSTEM/uClibc-$UCLIBCVER"
	fi
	# Where uClibc headers are put
	UCLIBCHDIR="$SYSROOT"
	GCCEXTRAS="--disable-__cxa_atexit --disable-decimal-float --with-float=soft --with-abi=aapcs-linux --disable-largefile --disable-libssp --disable-tls"
else
	# Target (required)
	TARG="arm-linux-gnu"
	# Glibc version to build
	GLIBCVER="2.7"
	GLIBCDIR="$SYSTEM/glibcbuild"
	CLIBCDIR=$INSTALL
	PATCHDIR="$PATCHDIR/glibc"
	# Options you may want to change
	GLIBCHOPTS="--with-elf --enable-shared --disable-sanity-checks"
	GLIBCFOPTS="--with-headers=$HEADERSDIR --without-cvs --disable-profile --disable-debug --without-gd --with-elf --enable-shared"
	GCCEXTRAS="--enable-__cxa_atexit"
fi

# Needed for uClibc configuring (required change TEMPLATETARG to more descriptive TARG)
TEMPLATETARG="arm-linux"
# Binutils options
BINOPTS="--disable-nls --with-sysroot=$SYSROOT"
# Gcc base options
GCCBOPTS="--enable-multilib --with-sysroot=$SYSROOT --disable-nls --with-local-prefix=$SYSROOT --disable-threads --disable-shared $GCCEXTRAS --enable-languages=c"
# Final Gcc options
# Shared seems to cause the cross compiler to fail to build
GCCFOPTS="--disable-shared --enable-multilib --with-sysroot=$SYSROOT --with-local-prefix=$SYSROOT --disable-nls --enable-threads=$THREADS --enable-c99 $GCCEXTRAS --enable-languages=$LANGUAGES"

QuietExec "mkdir -p $SYSROOT/lib"
QuietExec "mkdir -p $SYSROOT/usr/lib"

# End Arm Linux options
